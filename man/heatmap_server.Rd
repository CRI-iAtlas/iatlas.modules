% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/heatmap_server.R
\name{heatmap_server}
\alias{heatmap_server}
\title{Heatmap Server}
\usage{
heatmap_server(
  id,
  feature_sample_data_function,
  response_sample_data_function,
  feature_data,
  response_data,
  group_data,
  summarise_function_list = shiny::reactive(stats::cor),
  drilldown = shiny::reactive(F),
  default_response = shiny::reactive(NULL),
  default_class = shiny::reactive(NULL),
  ...
)
}
\arguments{
\item{id}{Module ID}

\item{feature_sample_data_function}{A shiny::reactive that returns a function
The function must take an argument called ".feature_class" and return a
dataframe with columns "sample_name", "group_name", "dataset_name",
"feature_name", and "feature_value"}

\item{response_sample_data_function}{A shiny::reactive that returns a function
The function must take an argument called ".feature" and return a
dataframe with columns "sample_name", "feature_name", "feature_value"}

\item{feature_data}{A shiny::reactive that returns a dataframe with columns
"feature_name","feature_display", "feature_class", and "feature_order". Each
value in the "feature_name" column should only appear once.}

\item{response_data}{A shiny::reactive that returns a dataframe with columns
"feature_name","feature_display", and optionally "feature_class. Each value
 in the "feature_name" column should only appear once.}

\item{group_data}{A shiny::reactive that returns a dataframe with columns
"group_name", "group_display", and optionally "group_description" and
"group_color". Each value in the "group_name"column should only appear once.}

\item{summarise_function_list}{A shiny::reactive that returns a either a function
or a named list of functions. If a list is passed, it will be passed to
shiny::selectInput. Each function must take vectors. The first one will be
the "feature_value" column of feature_data_function, and the second will be
the "feature_value" of repsonse_data_function. Each function must return one
numeric value.}

\item{drilldown}{A shiny::reactive that returns True or False}

\item{default_response}{A shiny::reactive that returns a string that is one of
the values in the response_data feature_name column}

\item{default_class}{A shiny::reactive that returns a string that is one of
the values in the feature_data feature_class column}

\item{...}{arguments sent to plotly_scatter}
}
\description{
Heatmap Server
}
