#   "group_description" = stringr::str_c("Iris Species: ", .data$group),
# ) %>%
dplyr::inner_join(
dplyr::tribble(
~feature_class, ~feature,
"Length",       "Sepal.Length",
"Width",        "Sepal.Width",
"Length",       "Petal.Length",
"Width",        "Petal.Width"
),
by = "feature"
)
use_test()
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
example_iris_data()
example_iris_data() %>%
dplyr::select("group", "description" = "group_description") %>%
dplyr::distinct()
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
test()
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
use_test()
shiny::runApp('Example_App')
use_test()
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
?messageBox
messageBox
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
test()
document()
check()
use_test()
test_coverage()
check()
test_coverage()
check()
test()
check()
renv::init()
renv::restore()
test()
check()
?shiny::includeMarkdown
test()
check()
renv::init()
test()
check()
document()
check()
document()
check()
test()
check()
use_test()
load_all()
shiny::runApp("Example_APP")
shiny::runApp("Example_App")
load_all()
shiny::runApp("Example_App")
test()
use_test()
runApp('Example_App')
load_all()
runApp('Example_App')
load_all()
runApp('Example_App')
load_all()
runApp('Example_App')
test()
document()
check()
document()
check()
shinyApp(ui, server, ...)
shinyApp(ui, server)
?shinyApp
load_all()
shinyApp(ui, server)
load_all()
shinyApp(ui, server)
test()
check()
shinyApp(ui, server)
load_all()
shinyApp(ui, server)
shiny::shinyApp(ui, server)
load_all()
shiny::shinyApp(ui, server)
load_all()
shiny::shinyApp(ui, server)
test()
use_test()
renv::update("ialts.modules")
test()
use_test()
?example_iris_data
example_iris_data
example_iris_data()
use_test()
test()
use_data()
use_test()
source('~/repos/irwg/iatlas.modules/R/distributions_plot_server.R', echo=TRUE)
shiny::runApp()
shiny::shinyApp(ui, server)
?shinyApp
server <- function(input, output, session) {
# examples ----
barplot_server(
"barplot1",
shiny::reactive(example_starwars_data_func),
barplot_xlab = shiny::reactive("Species"),
barplot_ylab = shiny::reactive("Height")
)
barplot_server(
"barplot2",
shiny::reactive(example_iris_data_func),
feature_classes = shiny::reactive(c("Length", "Width")),
barplot_xlab = shiny::reactive("Species"),
drilldown = shiny::reactive(T)
)
barplot_server(
"barplot3",
shiny::reactive(example_iris_data_func),
barplot_xlab = shiny::reactive("Species"),
drilldown = shiny::reactive(T)
)
barplot_server(
"barplot4",
shiny::reactive(example_iris_data_func),
barplot_xlab = shiny::reactive("Species"),
drilldown = shiny::reactive(T),
x_feature_input = shiny::reactive("Petal.Length"),
y_feature_input = shiny::reactive("Petal.Width")
)
}
?shinyApp
devtools::load_all(".")
?shinyApp
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
use_test()
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
use_test()
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
test()
test_coverage()
use_test()
test_coverage()
use_test(
)
use_test()
test()
test_coverage()
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
use_test()
test()
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
dplyr::summarise()
?dplyr::summarise()
?forcats::fct_reorder
renv::install("forcats")
renv::snapshot()
?forcats::fct_reorder
?forcats::fct_relevel
?forcats::as_factor
forcats::as_factor
?forcats::as_factor
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
test_coverage()
use_test()
iris %>%
dplyr::as_tibble() %>%
dplyr::mutate("sample" = as.character(1:dplyr::n())) %>%
tidyr::pivot_longer(
!c("Species", "sample"),
names_to = "feature",
values_to = "feature_value"
) %>%
dplyr::rename("group" = "Species") %>%
dplyr::mutate(
"group_description" = stringr::str_c("Iris Species: ", .data$group),
) %>%
dplyr::inner_join(
dplyr::tribble(
~feature_class, ~feature,
"Length",       "Sepal.Length",
"Width",        "Sepal.Width",
"Length",       "Petal.Length",
"Width",        "Petal.Width"
),
by = "feature"
iris %>%
dplyr::as_tibble() %>%
dplyr::mutate("sample" = as.character(1:dplyr::n())) %>%
tidyr::pivot_longer(
!c("Species", "sample"),
names_to = "feature",
values_to = "feature_value"
) %>%
dplyr::rename("group" = "Species") %>%
dplyr::mutate(
"group_description" = stringr::str_c("Iris Species: ", .data$group),
) %>%
dplyr::inner_join(
dplyr::tribble(
~feature_class, ~feature,
"Length",       "Sepal.Length",
"Width",        "Sepal.Width",
"Length",       "Petal.Length",
"Width",        "Petal.Width"
),
by = "feature"
)
example_iris_data() %>%
dplyr::select("feature_class", "feature") %>%
dplyr::distinct()
example_iris_data() %>%
dplyr::select("feature_class", "feature") %>%
dplyr::distinct() %>%
tidyr::nest("feature")
? tidyr::nest
example_iris_data() %>%
dplyr::select("feature_class", "feature") %>%
dplyr::distinct() %>%
tidyr::nest(cols = "feature")
example_iris_data() %>%
dplyr::select("feature_class", "feature") %>%
dplyr::distinct() %>%
tidyr::nest(cols = "feature") %>%
tibble::deframe()
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
example_iris_data() %>%
dplyr::select("feature_class", "feature") %>%
dplyr::distinct() %>%
tidyr::nest(cols = "feature") %>%
tibble::deframe(.)
?shiny::selectInput
use_test()
example_iris_data() %>%
dplyr::select(
"feature_class",
"feature_name" = "feature",
"feature_display" = "feature"
)
devtools::load_all(".")
example_iris_data() %>%
dplyr::select(
"feature_class",
"feature_name" = "feature",
"feature_display" = "feature"
)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
devtools::load_all(".")
shiny::shinyApp(ui, server)
test()
use_test()
example_iris_data()
test()
use_test()
test()
use_test()
iris %>%
dplyr::as_tibble() %>%
dplyr::mutate("sample" = as.character(1:dplyr::n())) %>%
tidyr::pivot_longer(
!c("Species", "sample"),
names_to = "feature_name",
values_to = "feature_value"
) %>%
dplyr::rename("group" = "Species") %>%
dplyr::mutate(
"group_description" = stringr::str_c("Iris Species: ", .data$group),
) %>%
dplyr::inner_join(
dplyr::tribble(
~feature_class, ~feature_name,   ~feature_class2, ~feature_display,
"Length",       "Sepal.Length",  "Sepal",         "Sepal Length",
"Width",        "Sepal.Width",   "Sepal",         "Sepal Width",
"Length",       "Petal.Length",  "Petal",         "Petal Length",
"Width",        "Petal.Width",   "Petal",         "Petal Width"
),
by = "feature"
)
iris %>%
dplyr::as_tibble() %>%
dplyr::mutate("sample" = as.character(1:dplyr::n())) %>%
tidyr::pivot_longer(
!c("Species", "sample"),
names_to = "feature_name",
values_to = "feature_value"
)
iris %>%
dplyr::as_tibble() %>%
dplyr::mutate("sample" = as.character(1:dplyr::n())) %>%
tidyr::pivot_longer(
!c("Species", "sample"),
names_to = "feature_name",
values_to = "feature_value"
) %>%
dplyr::rename("group" = "Species") %>%
dplyr::mutate(
"group_description" = stringr::str_c("Iris Species: ", .data$group),
)
iris %>%
dplyr::as_tibble() %>%
dplyr::mutate("sample" = as.character(1:dplyr::n())) %>%
tidyr::pivot_longer(
!c("Species", "sample"),
names_to = "feature_name",
values_to = "feature_value"
) %>%
dplyr::rename("group" = "Species") %>%
dplyr::mutate(
"group_description" = stringr::str_c("Iris Species: ", .data$group),
) %>%
dplyr::inner_join(
dplyr::tribble(
~feature_class, ~feature_name,   ~feature_class2, ~feature_display,
"Length",       "Sepal.Length",  "Sepal",         "Sepal Length",
"Width",        "Sepal.Width",   "Sepal",         "Sepal Width",
"Length",       "Petal.Length",  "Petal",         "Petal Length",
"Width",        "Petal.Width",   "Petal",         "Petal Width"
),
by = "feature_name"
)
example_iris_data <- function(){
iris %>%
dplyr::as_tibble() %>%
dplyr::mutate("sample" = as.character(1:dplyr::n())) %>%
tidyr::pivot_longer(
!c("Species", "sample"),
names_to = "feature",
values_to = "feature_value"
) %>%
dplyr::rename("group" = "Species") %>%
dplyr::mutate(
"group_description" = stringr::str_c("Iris Species: ", .data$group),
) %>%
dplyr::inner_join(
dplyr::tribble(
~feature_class, ~feature,   ~feature_class2, ~feature_display,
"Length",       "Sepal.Length",  "Sepal",         "Sepal Length",
"Width",        "Sepal.Width",   "Sepal",         "Sepal Width",
"Length",       "Petal.Length",  "Petal",         "Petal Length",
"Width",        "Petal.Width",   "Petal",         "Petal Width"
),
by = "feature"
)
iris %>%
dplyr::as_tibble() %>%
dplyr::mutate("sample" = as.character(1:dplyr::n())) %>%
tidyr::pivot_longer(
!c("Species", "sample"),
names_to = "feature",
values_to = "feature_value"
) %>%
dplyr::rename("group" = "Species") %>%
dplyr::mutate(
"group_description" = stringr::str_c("Iris Species: ", .data$group),
) %>%
dplyr::inner_join(
dplyr::tribble(
~feature_class, ~feature,   ~feature_class2, ~feature_display,
"Length",       "Sepal.Length",  "Sepal",         "Sepal Length",
"Width",        "Sepal.Width",   "Sepal",         "Sepal Width",
"Length",       "Petal.Length",  "Petal",         "Petal Length",
"Width",        "Petal.Width",   "Petal",         "Petal Width"
),
by = "feature"
)
test()
