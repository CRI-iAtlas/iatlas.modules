) %>%
dplyr::inner_join(
dplyr::tribble(
~feature_class, ~feature,
"Length",       "Sepal.Length",
"Width",        "Sepal.Width",
"Length",       "Petal.Length",
"Width",        "Petal.Width"
)
iris %>%
dplyr::as_tibble() %>%
dplyr::mutate("sample" = as.character(1:dplyr::n())) %>%
tidyr::pivot_longer(
!c("Species", "sample"),
names_to = "feature",
values_to = "feature_value"
) %>%
dplyr::rename("group" = "Species") %>%
dplyr::mutate(
"group_description" = stringr::str_c("Iris Species: ", .data$group),
"group_display" = stringr::str_to_title(.data$group),
"feature_display" = .data$feature
) %>%
dplyr::inner_join(
dplyr::tribble(
~feature_class, ~feature,
"Length",       "Sepal.Length",
"Width",        "Sepal.Width",
"Length",       "Petal.Length",
"Width",        "Petal.Width"
)
load_all()
use_test()
test()
use_test()
renv::install("ropensci/plotly")
renv::snapshot()
example_iris_data()
load_all(
)
example_iris_data()
example_iris_data() %>%
dplyr::select(
"sample",
"x" = "group",
"y" = "feature_value",
"color" = "feature"
)
test()
shiny::runApp("Example_App")
load_all()
shiny::runApp("example_App")
shiny::runApp("Example_App")
dplyr::starwars
iris %>%
dplyr::as_tibble() %>%
dplyr::mutate("sample" = as.character(1:dplyr::n())) %>%
tidyr::pivot_longer(
!c("Species", "sample"),
names_to = "feature",
values_to = "feature_value"
) %>%
dplyr::rename("group" = "Species")
?dplyr::starwars
dplyr::starwars
dplyr::select(
dplyr::starwars,
"sample" = "name",
"group" = "species",
"height",
"mass"
)
dplyr::select(
dplyr::starwars,
"sample" = "name",
"group" = "species",
"height",
"mass"
) %>%
tidyr::pivot_longer(-c("sample", "group", names_to = "feature", values_to = "feature_value"))
dplyr::select(
dplyr::starwars,
"sample" = "name",
"group" = "species",
"height",
"mass"
) %>%
tidyr::pivot_longer(-c("sample", "group"), names_to = "feature", values_to = "feature_value")
use_test()
dplyr::starwars %>%
dplyr::select(
"sample" = "name",
"group" = "species",
"height",
"mass"
) %>%
tidyr::pivot_longer(
-c("sample", "group"), names_to = "feature", values_to = "feature_value"
)
load_all()
shiny::runApp("Example_App")
load_all()
shiny::runApp("Example_App")
runApp('Example_App')
test()
use_test()
load_all()
document()
check()
use_test()
load_all()
runApp('Example_App')
shiny::runApp('Example_App')
use_test()
example_iris_data()
example_iris_data() %>%
summarise_barplot_se()
example_iris_data() %>%
summarise_barplot_se(title = "Sample")
runApp('Example_App')
load_all()
runApp('Example_App')
load_all()
runApp('Example_App')
use_test()
test()
load_all()
runApp('Example_App')
document()
check()
use_test()
test()
load_all()
runApp('Example_App')
use_test()
?purrr::every
?tidyr::unnest
?base::all
test()
load_all()
runApp('Example_App')
use_test()
test()
load_all()
runApp('Example_App')
load_all()
runApp('Example_App')
dplyr::select(
example_iris_data(),
"sample",
"group",
"feature_value",
"feature"
)
test()
load_all()
runApp('Example_App')
load_all()
runApp('Example_App')
load_all()
runApp('Example_App')
load_all()
runApp('Example_App')
shiny::runApp('Example_App')
test_coverage()
use_test()
test_coverage_file()
test_coverage()
use_test()
test_coverage_file()
document()
check()
use_test()
test()
use_test()
test()
document()
check()
load_all()
shiny::runApp('Example_App')
test()
document()
check()
load_all()
runApp('Example_App')
use_test()
?file.path
plot_data <- test_data_dir %>%
file.path("pcawg_barchart_data.tsv") %>%
readr::read_tsv(.)
test_data_dir  <- system.file("test_data", package = "iatlas.modules")
plot_data <- test_data_dir %>%
file.path("pcawg_barchart_data.tsv") %>%
readr::read_tsv(.)
plot_data <- test_data_dir %>%
file.path("inst/test_data/pcawg_barchart_data.tsv") %>%
readr::read_tsv(.)
plot_data <- "inst/test_data/pcawg_barchart_data.tsv" %>%
readr::read_tsv(.)
View(plot_data)
plot_data$feature_class
use_test()
test_data_dir  <- system.file("test_data", package = "iatlas.modules")
plot_data <- test_data_dir %>%
file.path("pcawg_barchart_data.tsv") %>%
readr::read_tsv(.)
use_test()
x <- "inst/test_data/pcawg_barchart_data.tsv") %>%
readr::read_tsv(.) %>%
dplyr::filter(
x <- "inst/test_data/pcawg_barchart_data.tsv" %>%
readr::read_tsv(.) %>%
dplyr::filter(
.data$feature_class ==
"Immune Cell Proportion - Differentiated Lymphoid and Myeloid Cell Derivative Class"
)
x <- "inst/test_data/pcawg_barchart_data.tsv" %>%
readr::read_tsv(.) %>%
dplyr::filter(
.data$feature_class ==
"Immune Cell Proportion - Differentiated Lymphoid and Myeloid Cell Derivative Class"
) %>%
dplyr::filter(.data$group == "C1") %>%
dplyr::select("sample", "feature", "feature_value") %>%
tidyr::pivot_wider(
., values_from = "feature_value", names_from = "feature"
)
x <- "inst/test_data/pcawg_barchart_data.tsv" %>%
readr::read_tsv(.) %>%
dplyr::filter(
.data$feature_class ==
"Immune Cell Proportion - Differentiated Lymphoid and Myeloid Cell Derivative Class"
) %>%
dplyr::filter(.data$group == "C1") %>%
dplyr::select("sample", "feature", "feature_value")
View(x)
x <- "inst/test_data/pcawg_barchart_data.tsv" %>%
readr::read_tsv(.) %>%
dplyr::filter(
.data$feature_class ==
"Immune Cell Proportion - Differentiated Lymphoid and Myeloid Cell Derivative Class"
) %>%
dplyr::filter(.data$group == "C1") %>%
dplyr::select("sample", "feature", "feature_value") %>%
dplyr::distinct() %>%
tidyr::pivot_wider(
., values_from = "feature_value", names_from = "feature"
)
x <- "inst/test_data/pcawg_barchart_data.tsv" %>%
readr::read_tsv(.) %>%
dplyr::filter(
.data$feature_class ==
"Immune Cell Proportion - Differentiated Lymphoid and Myeloid Cell Derivative Class"
) %>%
dplyr::filter(.data$group == "C1") %>%
dplyr::select("sample", "feature", "feature_value") %>%
dplyr::distinct()
x <- "inst/test_data/pcawg_barchart_data.tsv" %>%
readr::read_tsv(.) %>%
# dplyr::filter(
#   .data$feature_class ==
#     "Immune Cell Proportion - Differentiated Lymphoid and Myeloid Cell Derivative Class"
# ) %>%
dplyr::filter(.data$group == "C1") %>%
dplyr::select("sample", "feature", "feature_value", "feature_class") %>%
dplyr::distinct() %>%
dplyr::arrange("sample", "feature_value", "feature_class")
View(x)
x <- "inst/test_data/pcawg_barchart_data.tsv" %>%
readr::read_tsv(.) %>%
dplyr::filter(
.data$feature_class ==
"Immune Cell Proportion - Differentiated Lymphoid and Myeloid Cell Derivative Class"
) %>%
dplyr::filter(.data$group == "C1") %>%
dplyr::select("sample", "feature", "feature_value", "feature_class") %>%
dplyr::distinct() %>%
dplyr::arrange("sample", "feature_value", "feature_class")
View(x)
x <- "inst/test_data/pcawg_barchart_data.tsv" %>%
readr::read_tsv(.)
View(x)
test()
use_test()
?dplyr::any_of
test()
load_all()
runApp('Example_App')
load_all()
runApp('Example_App')
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
use_test()
test()
document()
check()
document()
check()
document()
check()
use_test()
test()
document()
check()
test()
use_test()
test()
check()
load_all()
shiny::runApp('Example_App')
use_test()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
dplyr::starwars %>%
dplyr::select(
"sample" = "name",
"group" = "species",
"height",
"mass"
) %>%
tidyr::pivot_longer(
-c("sample", "group"), names_to = "feature", values_to = "feature_value"
)
iris %>%
dplyr::as_tibble() %>%
dplyr::mutate("sample" = as.character(1:dplyr::n())) %>%
tidyr::pivot_longer(
!c("Species", "sample"),
names_to = "feature",
values_to = "feature_value"
) %>%
dplyr::rename("group" = "Species") %>%
# dplyr::mutate(
#   "group_description" = stringr::str_c("Iris Species: ", .data$group),
# ) %>%
dplyr::inner_join(
dplyr::tribble(
~feature_class, ~feature,
"Length",       "Sepal.Length",
"Width",        "Sepal.Width",
"Length",       "Petal.Length",
"Width",        "Petal.Width"
),
by = "feature"
)
use_test()
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
example_iris_data()
example_iris_data() %>%
dplyr::select("group", "description" = "group_description") %>%
dplyr::distinct()
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
test()
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
use_test()
shiny::runApp('Example_App')
use_test()
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
?messageBox
messageBox
load_all()
shiny::runApp('Example_App')
load_all()
shiny::runApp('Example_App')
test()
document()
check()
use_test()
test_coverage()
check()
test_coverage()
check()
test()
check()
renv::init()
renv::restore()
test()
check()
?shiny::includeMarkdown
test()
check()
renv::init()
test()
check()
document()
check()
document()
check()
test()
check()
use_test()
load_all()
shiny::runApp("Example_APP")
shiny::runApp("Example_App")
load_all()
shiny::runApp("Example_App")
test()
use_test()
runApp('Example_App')
load_all()
runApp('Example_App')
load_all()
runApp('Example_App')
load_all()
runApp('Example_App')
test()
document()
check()
document()
check()
shinyApp(ui, server, ...)
shinyApp(ui, server)
?shinyApp
load_all()
shinyApp(ui, server)
load_all()
shinyApp(ui, server)
test()
check()
shinyApp(ui, server)
load_all()
shinyApp(ui, server)
shiny::shinyApp(ui, server)
load_all()
shiny::shinyApp(ui, server)
load_all()
shiny::shinyApp(ui, server)
test()
use_test()
renv::update("ialts.modules")
test()
use_test()
?example_iris_data
example_iris_data
example_iris_data()
use_test()
